plugins {
	id 'checkstyle'
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.springframework.boot' version '3.1.3'
	id 'se.solrike.sonarlint' version '1.0.0-beta.15'
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = JavaVersion.VERSION_17

dependencyLocking {
	lockAllConfigurations()
}

checkstyle {
	toolVersion = '10.3'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor('org.projectlombok:lombok')
	annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
	compileOnly('org.projectlombok:lombok')
	developmentOnly('org.springframework.boot:spring-boot-devtools')
	sonarlintPlugins('org.sonarsource.java:sonar-java-plugin:7.21.0.31796')

	implementation('io.github.cdimascio:dotenv-java:3.0.0')
	implementation('me.paulschwarz:spring-dotenv:4.0.0')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('com.okta.spring:okta-spring-boot-starter:3.0.5')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')

	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.1.5'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	implementation "com.querydsl:querydsl-apt:5.0.0:jakarta"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
